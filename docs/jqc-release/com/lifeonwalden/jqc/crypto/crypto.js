"use strict";!function(o){$JqcLoader.importComponents("com.lifeonwalden.jqc",["charUtil"]).execute(function(){var u=window.crypto.subtle;function e(t){var n=t;return null==n||null==n.byteBuffer&&null==n.text?((n={}).byteBuffer=window.crypto.getRandomValues(new Uint8Array(12)),n.text=o.charUtil.byteToU64(n.byteBuffer)):null==n.byteBuffer&&null!=n.text?n.byteBuffer=new Uint8Array(o.charUtil.u64ToByte(n.text)):null!=n.byteBuffer&&null==n.text&&(n.text=o.charUtil.byteToU64(n.byteBuffer)),n}o.crypto={importKeyAsync:function(t){var r=1<arguments.length&&void 0!==arguments[1]?arguments[1]:"raw",c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:"AES-GCM",i=3<arguments.length&&void 0!==arguments[3]?arguments[3]:["encrypt","decrypt"];return new Promise(function(n,e){u.importKey(r,o.charUtil.u64ToByte(t),c,!0,i).then(function(t){return n(t)}).catch(function(t){return e(t)})})},aesGenerateKeyAsync:function(){var t=0<arguments.length&&void 0!==arguments[0]?arguments[0]:"AES-GCM",r=1<arguments.length&&void 0!==arguments[1]?arguments[1]:256,c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:["encrypt","decrypt"];return new Promise(function(n,e){u.generateKey({name:t,length:r},!0,c).then(function(t){u.exportKey("raw",t).then(function(t){n(o.charUtil.byteToU64(t))})}).catch(function(t){return e(t)})})},encryptAesGcmAsync:function(t,r,n){var c=e(n),i={name:"AES-GCM",iv:c.byteBuffer};return new Promise(function(n,e){u.encrypt(i,t,new Uint8Array(o.charUtil.textToByte(r))).then(function(t){return n({text:o.charUtil.byteToU64(t),iv:c})}).catch(function(t){return e(t)})})},decryptAesGcmAsync:function(t,r,n){var c={name:"AES-GCM",iv:e(n).byteBuffer};return new Promise(function(n,e){u.decrypt(c,t,new Uint8Array(o.charUtil.u64ToByte(r))).then(function(t){return n(o.charUtil.byteToText(new Uint8Array(t)))}).catch(function(t){return e(t)})})},rsaGenerateKeyAsync:function(){var t=0<arguments.length&&void 0!==arguments[0]?arguments[0]:"RSA-OAEP",n=1<arguments.length&&void 0!==arguments[1]?arguments[1]:2048,c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:["encrypt","decrypt"];return new Promise(function(e,r){u.generateKey({name:t,modulusLength:n,publicExponent:new Uint8Array([1,0,1]),hash:"SHA-256"},!0,c).then(function(t){u.exportKey("pkcs8",t.privateKey).then(function(n){u.exportKey("spki",t.publicKey).then(function(t){return e({privateKey:o.charUtil.byteToU64(n),publicKey:o.charUtil.byteToU64(t)})}).catch(function(t){return r(t)})}).catch(function(t){return r(t)})}).catch(function(t){return r(t)})})},encryptRsaAsync:function(t,r){var c={name:"RSA-OAEP"};return new Promise(function(n,e){u.encrypt(c,t,new Uint8Array(o.charUtil.textToByte(r))).then(function(t){return n(o.charUtil.byteToU64(t))}).catch(function(t){return e(t)})})},decryptRsaAsync:function(t,r){var c={name:"RSA-OAEP"};return new Promise(function(n,e){u.decrypt(c,t,new Uint8Array(o.charUtil.u64ToByte(r))).then(function(t){return n(o.charUtil.byteToText(new Uint8Array(t)))}).catch(function(t){return e(t)})})},digestAsync:function(t){var r=1<arguments.length&&void 0!==arguments[1]?arguments[1]:"SHA-256";return new Promise(function(n,e){u.digest(r,o.charUtil.textToByte(t)).then(function(t){return n(o.charUtil.byteToU64(t))}).catch(function(t){return e(t)})})}}})}(jQuery);